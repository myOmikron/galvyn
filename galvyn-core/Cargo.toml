[package]
name = "galvyn-core"
version = "0.1.0"
edition = "2024"
authors = ["Niklas Pfister <git@omikron.dev>"]
license = "MPL-2.0"
description = "Core concepts for galvyn like trait definitions"

[dependencies]
# Webserver
axum = { workspace = true, default-features = false, features = ["query", "form", "json"] }
bytes = { version = "~1" }
mime = { version = "~0.3" }
serde = { version = "~1" }
serde_json = { version = "~1" }
serde_repr = { version = "~0.1" }
schemars = { workspace = true, features = ["uuid1"] }
tower = { version = "~0.5" }
regex = { version = "~1" }
tracing = { version = "~0.1" }
thiserror = "~2"
anyhow = { version = "~1" }
rorm = { workspace = true, features = ["time"] }
uuid = { version = "~1", features = ["v4", "serde"] }
time = { version = "~0.3" }

# TODO: maybe roll our own?
tower-sessions = { version = "~0.14" }
# required by tower-sessions
async-trait = { version = "~0.1" }
base64 = { version = "~0.22" }

# TODO: maybe roll our own?
envy = { version = "~0.4" }

# ----- #
# Async #
# ----- #

# Runtime
tokio = { workspace = true, default-features = false }

# The basic async traits (Future, Stream, AsyncRead, ...) and extensions for them
futures-lite = { version = "~2", default-features = false, features = ["alloc"] }

# Runtime agnostic primitives for structured concurrency
futures-concurrency = { version = "~7", default-features = false, features = ["alloc"] }